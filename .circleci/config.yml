version: 2.1

commands:
  save_go_cache:
    steps:
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  restore_go_cache:
    steps:
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}

  configure_version:
    steps:
      - run:
          name: Configure App Version
          command: |
            echoe "export APP_VERSION=$(CIRCLECI_TAG)" >> $BASH_ENV
            source $BASH_ENV

jobs:
  lint:
    docker:
      - image: cimg/go:1.23
    steps:
      # Checkout the code as the first step.
      - checkout
      - restore_go_cache
      - run:
          name: Install Dependencies
          command: go mod download
      - save_go_cache
      - run:
          name: Lint the code
          command: make lint

  test:
    docker:
      - image: cimg/go:1.23
    steps:
      # Checkout the code as the first step.
      - checkout
      - restore_go_cache
      - run:
          name: Install Dependencies
          command: go mod download
      - save_go_cache
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports

  build:
    docker:
      - image: cimg/go:1.23
    steps:
      - checkout
      - restore_go_cache
      - run:
          name: Install Dependencies
          command: go mod download
      - save_go_cache
      - configure_version
      - run:
          name: Build the application
          command: |
            echo "Building version $APP_VERSION"
            make build VERSION=$APP_VERSION
      - persist_to_workspace:
          root: .
          paths:
            - ./bin/app

  deploy:
    docker:
      - image: cimg/go:1.23
    steps:
      - checkout
      - run:
          name: Deploy to staging
          command: echo "Deploying to staging server"

workflows:
  lint-test-build:
    jobs:
      - lint
      - test
      - build:
          requires:
            - lint
            - test
